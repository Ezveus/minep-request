#!/usr/bin/env ruby

# lib = "lib"
# $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'optparse'
require 'socket'
require 'WEBSocket'
require 'minep-request'

$options = {
  :host => "localhost",
  :port => 8080,
  :type => :tcp
}
$goon = true

$commands = {
  "authenticate" => Proc.new { |s| Minep::Request.authenticate s},
  "signup" => Proc.new { |s| Minep::Request.signup s},
  "exec" => Proc.new { |s| Minep::Request.exec s},
  "insert" => Proc.new { |s| Minep::Request.insert s},
  "move" => Proc.new { |s| Minep::Request.move s},
  "backspace" => Proc.new { |s| Minep::Request.backspace s},
  "delete" => Proc.new { |s| Minep::Request.delete s},
  "file" => Proc.new { |s| Minep::Request.file s},
  "help" => Proc.new { |s| help s},
  "exit" => Proc.new { |s| quit s},
  "quit" => Proc.new { |s| quit s}
}

def quit socket = nil
  $goon = false
  puts "Exiting"
end

def help socket = nil
  puts "Valid commands are :"
  $commands.keys.sort.each do |c|
    puts "#{c} : #{Minep::Request::CommandsInfo[c]}"
  end
end

optparse = OptionParser.new do |opts|
  portSpecified = false
  opts.banner = <<-eos
Usage: mine-request [OPTIONS]
Send a request to a MINE server
eos

  opts.on "-h", "--host HOST", "server hostname" do |h|
    $options[:host] = h
  end

  opts.on "-p", "--port PORT", Integer, "server port" do |p|
    $options[:port] = p
    portSpecified = true
  end

  opts.on "-t", "--type TYPE", [:tcp, :websocket], "type of communication (tcp | websocket)" do |t|
    $options[:type] = t
    $options[:port] = 8081 unless portSpecified
  end

  opts.on "--help", "displays this screen" do |h|
    puts opts
    exit 1
  end
end

begin
  optparse.parse!
rescue OptionParser::InvalidOption, OptionParser::MissingArgument, OptionParser::InvalidArgument
  puts $!.to_s
  puts optparse
  exit 1
end

begin
  if $options[:type] == :tcp
    socket = TCPSocket.new $options[:host], $options[:port]
  elsif $options[:type] == :websocket
    socket = WEBSocket::Socket.new $options[:host], $options[:port]
  end
rescue => e
  $stderr.puts "Error : #{e} <#{$options[:host]} - #{$options[:port]}>"
  exit 1
end

while $goon do
  printf ">> "
  begin
    cmd = Minep.read
    if $commands.key? cmd
      $commands[cmd].call socket
    else
      $stderr.puts "Error : unknown command"
    end
  rescue EOFError
    quit
  end
end
